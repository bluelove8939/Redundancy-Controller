$date
	Mon Oct 31 18:12:59 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module prefix_sum_tb $end
$var reg 1 ! clk $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 " \psum_arr[0] [5:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 # \psum_arr[1] [5:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 $ \psum_arr[2] [5:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 % \psum_arr[3] [5:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 & \psum_arr[4] [5:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 ' \psum_arr[5] [5:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 ( \psum_arr[6] [5:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 ) \psum_arr[7] [5:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 * \psum_arr[8] [5:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 + \psum_arr[9] [5:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 , \psum_arr[10] [5:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 - \psum_arr[11] [5:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 . \psum_arr[12] [5:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 / \psum_arr[13] [5:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 0 \psum_arr[14] [5:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 1 \psum_arr[15] [5:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 2 \psum_arr[16] [5:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 3 \psum_arr[17] [5:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 4 \psum_arr[18] [5:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 5 \psum_arr[19] [5:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 6 \psum_arr[20] [5:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 7 \psum_arr[21] [5:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 8 \psum_arr[22] [5:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 9 \psum_arr[23] [5:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 : \psum_arr[24] [5:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 ; \psum_arr[25] [5:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 < \psum_arr[26] [5:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 = \psum_arr[27] [5:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 > \psum_arr[28] [5:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 ? \psum_arr[29] [5:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 @ \psum_arr[30] [5:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 6 A \psum_arr[31] [5:0] $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
b0xxxxx 1
b0xxxxx 0
b0xxxxx /
b0xxxxx .
b0xxxxx -
b0xxxxx ,
b0xxxxx +
b0xxxxx *
b0xxxx )
b0xxxx (
b0xxxx '
b0xxxx &
b0xxx %
b0xxx $
b0xx #
b0x "
0!
$end
#5000
1!
#10000
b10001 2
b10010 3
b10011 4
b10100 5
b10101 6
b10110 7
b10111 8
b11000 9
b11011 <
b11100 =
b11001 :
b11010 ;
b11101 >
b11110 ?
b11111 @
b100000 A
b1001 *
b1010 +
b1011 ,
b1100 -
b1101 .
b1110 /
b1111 0
b10000 1
b101 &
b110 '
b111 (
b1000 )
b11 $
b100 %
b10 #
b1 "
0!
#15000
1!
#20000
0!
#25000
1!
#30000
0!
#35000
1!
#40000
0!
#45000
1!
#50000
0!
#55000
1!
#60000
0!
#65000
1!
#70000
0!
#75000
1!
#80000
0!
#85000
1!
#90000
0!
#95000
1!
#100000
0!
#105000
1!
#110000
0!
#115000
1!
#120000
0!
#125000
1!
#130000
0!
