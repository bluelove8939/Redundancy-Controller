$date
	Mon Oct 31 10:27:14 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module prefix_sum_tb $end
$var reg 1 ! clk $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 " \psum_arr[0] [31:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 # \psum_arr[1] [31:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 $ \psum_arr[2] [31:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 % \psum_arr[3] [31:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 & \psum_arr[4] [31:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 ' \psum_arr[5] [31:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 ( \psum_arr[6] [31:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 ) \psum_arr[7] [31:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 * \psum_arr[8] [31:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 + \psum_arr[9] [31:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 , \psum_arr[10] [31:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 - \psum_arr[11] [31:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 . \psum_arr[12] [31:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 / \psum_arr[13] [31:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 0 \psum_arr[14] [31:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 1 \psum_arr[15] [31:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 2 \psum_arr[16] [31:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 3 \psum_arr[17] [31:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 4 \psum_arr[18] [31:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 5 \psum_arr[19] [31:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 6 \psum_arr[20] [31:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 7 \psum_arr[21] [31:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 8 \psum_arr[22] [31:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 9 \psum_arr[23] [31:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 : \psum_arr[24] [31:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 ; \psum_arr[25] [31:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 < \psum_arr[26] [31:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 = \psum_arr[27] [31:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 > \psum_arr[28] [31:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 ? \psum_arr[29] [31:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 @ \psum_arr[30] [31:0] $end
$upscope $end
$scope module prefix_sum_tb $end
$var reg 32 A \psum_arr[31] [31:0] $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
b0xxxxxxxxxxxxxxxx 1
b0xxxxxxxxxxxxxxxx 0
b0xxxxxxxxxxxxxxxx /
b0xxxxxxxxxxxxxxxx .
b0xxxxxxxxxxxxxxxx -
b0xxxxxxxxxxxxxxxx ,
b0xxxxxxxxxxxxxxxx +
b0xxxxxxxxxxxxxxxx *
b0xxxxxxxx )
b0xxxxxxxx (
b0xxxxxxxx '
b0xxxxxxxx &
b0xxxx %
b0xxxx $
b0xx #
b0x "
0!
$end
#5000
1!
#10000
b10 $
b11 &
b11 '
b11 (
b11 *
b11 +
b11 ,
b11 -
b11 .
b100 /
b100 0
b100 2
b100 3
b101 <
b110 =
b110 >
b110 ?
b110 @
b110 A
b100 4
b101 5
b101 6
b101 7
b101 8
b101 9
b101 :
b101 ;
b100 1
b11 )
b10 %
b10 #
b1 "
0!
#15000
1!
#20000
0!
#25000
1!
#30000
0!
#35000
1!
#40000
0!
#45000
1!
#50000
0!
#55000
1!
#60000
0!
#65000
1!
#70000
0!
#75000
1!
#80000
0!
#85000
1!
#90000
0!
#95000
1!
#100000
0!
#105000
1!
#110000
0!
#115000
1!
#120000
0!
#125000
1!
#130000
0!
