$date
	Mon Nov 07 16:02:45 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module ZVCompresor_tb $end
$var reg 1 ! clk $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 " \lifm_comp_arr[0] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 # \lifm_comp_arr[1] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 $ \lifm_comp_arr[2] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 % \lifm_comp_arr[3] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 & \lifm_comp_arr[4] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 ' \lifm_comp_arr[5] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 ( \lifm_comp_arr[6] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 ) \lifm_comp_arr[7] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 * \lifm_comp_arr[8] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 + \lifm_comp_arr[9] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 , \lifm_comp_arr[10] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 - \lifm_comp_arr[11] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 . \lifm_comp_arr[12] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 / \lifm_comp_arr[13] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 0 \lifm_comp_arr[14] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 1 \lifm_comp_arr[15] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 2 \lifm_comp_arr[16] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 3 \lifm_comp_arr[17] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 4 \lifm_comp_arr[18] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 5 \lifm_comp_arr[19] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 6 \lifm_comp_arr[20] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 7 \lifm_comp_arr[21] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 8 \lifm_comp_arr[22] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 9 \lifm_comp_arr[23] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 : \lifm_comp_arr[24] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 ; \lifm_comp_arr[25] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 < \lifm_comp_arr[26] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 = \lifm_comp_arr[27] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 > \lifm_comp_arr[28] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 ? \lifm_comp_arr[29] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 @ \lifm_comp_arr[30] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 A \lifm_comp_arr[31] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 B \lifm_comp_arr[32] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 C \lifm_comp_arr[33] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 D \lifm_comp_arr[34] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 E \lifm_comp_arr[35] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 F \lifm_comp_arr[36] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 G \lifm_comp_arr[37] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 H \lifm_comp_arr[38] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 I \lifm_comp_arr[39] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 J \lifm_comp_arr[40] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 K \lifm_comp_arr[41] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 L \lifm_comp_arr[42] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 M \lifm_comp_arr[43] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 N \lifm_comp_arr[44] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 O \lifm_comp_arr[45] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 P \lifm_comp_arr[46] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 Q \lifm_comp_arr[47] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 R \lifm_comp_arr[48] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 S \lifm_comp_arr[49] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 T \lifm_comp_arr[50] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 U \lifm_comp_arr[51] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 V \lifm_comp_arr[52] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 W \lifm_comp_arr[53] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 X \lifm_comp_arr[54] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 Y \lifm_comp_arr[55] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 Z \lifm_comp_arr[56] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 [ \lifm_comp_arr[57] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 \ \lifm_comp_arr[58] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 ] \lifm_comp_arr[59] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 ^ \lifm_comp_arr[60] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 _ \lifm_comp_arr[61] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 ` \lifm_comp_arr[62] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 a \lifm_comp_arr[63] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 b \lifm_comp_arr[64] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 c \lifm_comp_arr[65] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 d \lifm_comp_arr[66] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 e \lifm_comp_arr[67] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 f \lifm_comp_arr[68] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 g \lifm_comp_arr[69] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 h \lifm_comp_arr[70] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 i \lifm_comp_arr[71] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 j \lifm_comp_arr[72] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 k \lifm_comp_arr[73] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 l \lifm_comp_arr[74] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 m \lifm_comp_arr[75] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 n \lifm_comp_arr[76] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 o \lifm_comp_arr[77] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 p \lifm_comp_arr[78] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 q \lifm_comp_arr[79] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 r \lifm_comp_arr[80] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 s \lifm_comp_arr[81] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 t \lifm_comp_arr[82] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 u \lifm_comp_arr[83] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 v \lifm_comp_arr[84] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 w \lifm_comp_arr[85] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 x \lifm_comp_arr[86] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 y \lifm_comp_arr[87] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 z \lifm_comp_arr[88] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 { \lifm_comp_arr[89] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 | \lifm_comp_arr[90] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 } \lifm_comp_arr[91] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 ~ \lifm_comp_arr[92] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 !" \lifm_comp_arr[93] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 "" \lifm_comp_arr[94] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 #" \lifm_comp_arr[95] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 $" \lifm_comp_arr[96] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 %" \lifm_comp_arr[97] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 &" \lifm_comp_arr[98] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 '" \lifm_comp_arr[99] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 (" \lifm_comp_arr[100] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 )" \lifm_comp_arr[101] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 *" \lifm_comp_arr[102] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 +" \lifm_comp_arr[103] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 ," \lifm_comp_arr[104] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 -" \lifm_comp_arr[105] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 ." \lifm_comp_arr[106] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 /" \lifm_comp_arr[107] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 0" \lifm_comp_arr[108] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 1" \lifm_comp_arr[109] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 2" \lifm_comp_arr[110] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 3" \lifm_comp_arr[111] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 4" \lifm_comp_arr[112] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 5" \lifm_comp_arr[113] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 6" \lifm_comp_arr[114] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 7" \lifm_comp_arr[115] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 8" \lifm_comp_arr[116] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 9" \lifm_comp_arr[117] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 :" \lifm_comp_arr[118] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 ;" \lifm_comp_arr[119] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 <" \lifm_comp_arr[120] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 =" \lifm_comp_arr[121] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 >" \lifm_comp_arr[122] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 ?" \lifm_comp_arr[123] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 @" \lifm_comp_arr[124] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 A" \lifm_comp_arr[125] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 B" \lifm_comp_arr[126] [7:0] $end
$upscope $end
$scope module ZVCompresor_tb $end
$var reg 8 C" \lifm_comp_arr[127] [7:0] $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx C"
bx B"
bx A"
bx @"
bx ?"
bx >"
bx ="
bx <"
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
bx 6"
bx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx v
bx u
bx t
bx s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
bx "
0!
$end
#5000
1!
#10000
0!
#15000
1!
#20000
0!
#25000
1!
#30000
0!
#35000
1!
#40000
0!
#45000
1!
#50000
0!
#55000
1!
#60000
0!
#65000
1!
#70000
0!
#75000
1!
#80000
0!
#85000
1!
#90000
0!
#95000
1!
#100000
0!
#105000
1!
#110000
0!
#115000
1!
#120000
0!
#125000
1!
#130000
0!
